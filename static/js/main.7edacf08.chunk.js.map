{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","isStart","setState","sortByName","ALPABET","sortByLength","LENGTH","reversed","reset","this","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,yEAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,QAAU,kBAAM,EAAKC,SAAS,CAAEL,WAAW,KAP7C,EASEM,WAAa,kBAAM,EAAKD,SAAS,CAAEH,SAAUN,EAASW,WATxD,EAWEC,aAAe,kBAAM,EAAKH,SAAS,CAAEH,SAAUN,EAASa,UAX1D,EAaEC,SAAW,WACT,EAAKL,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAfzB,EAmBEU,MAAQ,WACN,EAAKN,SAAS,CACZJ,YAAY,EACZC,SAAUN,EAASO,QAtBzB,4CA0BE,WACE,MAA4CS,KAAKb,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBW,EA9DV,SACEA,EACAX,EACAD,GAEA,IAAMa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKN,EAASW,QACZO,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKrB,EAASa,OACZK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAE3C,KAAKvB,EAASO,MAShB,OAJIF,GACFa,EAAaM,UAGRN,EAuCSO,CAAkBxB,EAAiBK,EAAUD,GAE3D,OACE,qBAAKqB,UAAU,MAAf,SACItB,EAOE,sBAAKsB,UAAU,YAAf,UACE,wBAAQC,KAAK,SAASC,QAASZ,KAAKN,WAApC,iCAIA,wBAAQiB,KAAK,SAASC,QAASZ,KAAKJ,aAApC,4BAIA,wBAAQe,KAAK,SAASC,QAASZ,KAAKF,SAApC,qBAIA,wBAAQY,UAAU,QAAQC,KAAK,SAASC,QAASZ,KAAKD,MAAtD,mBAIA,oBAAIW,UAAU,QAAd,SACGT,EAAMY,KAAI,SAAAC,GAAI,OACb,oBAAIJ,UAAU,cAAd,SAAwCI,GAAPA,WAxBvC,wBAAQJ,UAAU,QAAQC,KAAK,SAASC,QAASZ,KAAKR,QAAtD,yBAnCZ,GAAyBuB,aCrDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7edacf08.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Component } from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  isStart = () => this.setState({ isStarted: true });\n\n  sortByName = () => this.setState({ sortType: SortType.ALPABET });\n\n  sortByLength = () => this.setState({ sortType: SortType.LENGTH });\n\n  reversed = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App\">\n        {!isStarted\n          ? (\n            <button className=\"start\" type=\"button\" onClick={this.isStart}>\n              Start\n            </button>\n          )\n          : (\n            <div className=\"App__list\">\n              <button type=\"button\" onClick={this.sortByName}>\n                Sort alphabetically\n              </button>\n\n              <button type=\"button\" onClick={this.sortByLength}>\n                Sort by length\n              </button>\n\n              <button type=\"button\" onClick={this.reversed}>\n                Reverse\n              </button>\n\n              <button className=\"reset\" type=\"button\" onClick={this.reset}>\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {goods.map(good => (\n                  <li className=\"Goods__item\" key={good}>{good}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}